name: Android CI

on:
  push:
    tags:
      - '*'
 
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Install qrencode
      run: |
        sudo apt-get install -yyq qrencode libqrencode-dev python3-pip python3
        python3 -mpip install setuptools 
        python3 -mpip install qrencode pillow
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      id: build
      run: |
        echo ${{ secrets.KEYSTORE_FILE }} | base64 -d - > /tmp/keystore.jks
        export ORG_GRADLE_PROJECT_RELEASE_STORE_FILE=/tmp/keystore.jks
        export ORG_GRADLE_PROJECT_RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
        export ORG_GRADLE_PROJECT_RELEASE_KEY_ALIAS=key0
        export ORG_GRADLE_PROJECT_RELEASE_KEY_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
        ./gradlew assemble
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Application/build/outputs/apk/release/org.mdeimonitorsview.android.recorder-release-${{ steps.tagName.outputs.tag }}.apk
        asset_name: org.mdeimonitorsview.android.recorder-release-${{ steps.tagName.outputs.tag }}.apk
        asset_content_type: application/zip
    - name: Upload Debug Asset
      id: upload-release-asset-debug
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Application/build/outputs/apk/debug/org.mdeimonitorsview.android.recorder-debug-${{ steps.tagName.outputs.tag }}.apk
        asset_name: org.mdeimonitorsview.android.recorder-debug-${{ steps.tagName.outputs.tag }}.apk
        asset_content_type: application/zip
    - name: Prepare QR
      run: |
        python3 ./provision-qr.py ./Application/build/outputs/apk/release/org.mdeimonitorsview.android.recorder-release-${{ steps.tagName.outputs.tag }}.apk ${{ steps.create_release.outputs.upload_url }}/org.mdeimonitorsview.android.recorder-release-${{ steps.tagName.outputs.tag }}.apk
    - name: Upload QR
      id: upload-qr
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: qr.png
        asset_name: qr-${{ steps.tagName.outputs.tag }}.png
        asset_content_type: image/png
